//中序+层序遍历
//用vector存放树结点

#include<cstdio>
#include<queue>
#include<vector>
#include<algorithm>
using namespace std;

struct Node {
	int left;
	int right;
	int val;
};
vector<Node> tree;
vector<int> v;
int cnt = 0;
void inorder(int root) {
	if (tree[root].left == -1 && tree[root].right == -1) {
		tree[root].val = v[cnt++];
		return;
	}
	if (tree[root].left != -1)
		inorder(tree[root].left);
	tree[root].val = v[cnt++];
	if (tree[root].right != -1)
		inorder(tree[root].right);
}
void levelorder(int root) {
	queue<int> q;
	q.push(root);
	printf("%d", tree[root].val);
	while (!q.empty()) {
		int node = q.front();
		q.pop();
		if (node != 0)
			printf(" %d", tree[node].val);
		if (tree[node].left != -1)
			q.push(tree[node].left);
		if (tree[node].right != -1)
			q.push(tree[node].right);
	}
	return;
}

int main() {
	int n;
	scanf("%d", &n);
	tree.resize(n);
	v.resize(n);
	for (int i = 0; i < n; i++) {
		scanf("%d %d", &tree[i].left, &tree[i].right);
	}
	for (int i = 0; i < n; i++) {
		scanf("%d", &v[i]);
	}
	sort(v.begin(), v.end());
	inorder(0);
	levelorder(0);
	return 0;
}
